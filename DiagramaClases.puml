@startuml
'https://plantuml.com/sequence-diagram

class Apocalipsis {
  - logger : ApocalipsisLogger
  - controlPausa : ControlPausa
  - interfaz : InterfazServidor
  - idZ : String[5]
  - idH : String[5]
  - zonas : ZonaRiesgo[4]
  - zonaComun : ZonaComun
  - zonaDescanso : ZonaDescanso
  - comedor : Comedor
  - tunel : Tunel[4]
  - clasificacion : Clasificacion
  - executor : ExecutorService

  + Apocalipsis()
  + getZonaRiesgo() : ZonaRiesgo[]
  + getZonaComun() : ZonaComun
  + getZonaDescanso() : ZonaDescanso
  + getComedor() : Comedor
  + getTunel() : Tunel[]
  + getClasificacion() : Clasificacion
  + reanudar() : void
  + detener() : void
  + ejecutarEnSegundoPlano() : void
  - inicializar() : void
}

Apocalipsis -> ApocalipsisLogger
Apocalipsis -> ControlPausa
Apocalipsis -> InterfazServidor
Apocalipsis -> ZonaRiesgo
Apocalipsis -> ZonaComun
Apocalipsis -> ZonaDescanso
Apocalipsis -> Comedor
Apocalipsis -> Tunel
Apocalipsis -> Clasificacion

class ApocalipsisLogger {
  - accesoArchivo : Semaphore
  - ARCHIVO_LOG : String

  + prepararArchivo() : void
  + log(mensaje : String) : void
}

class Clasificacion {
  - zonas : ZonaRiesgo[]
  - ordenarPorVictimas : Comparator<Zombie>

  + Clasificacion(zonas : ZonaRiesgo[])
  + generarTopZombies() : ArrayList<String>
}

Clasificacion -> ZonaRiesgo

class Comedor {
  - logger : ApocalipsisLogger
  - interfaz : InterfazServidor
  - listaComedor : LinkedBlockingQueue<Humano>
  - comidaDisp : AtomicInteger
  - turnoComida : Semaphore
  - accesoComida : ReentrantLock
  - sinComida : Condition

  + Comedor(log : ApocalipsisLogger, interfaz : InterfazServidor)
  + getComida() : AtomicInteger
  + getListaHumanosComedor() : LinkedBlockingQueue<Humano>
  + entregarComida(h : Humano) : void
  + comer(h : Humano) : void
}

Comedor -> ApocalipsisLogger
Comedor -> InterfazServidor
Comedor -> Humano

class ControlPausa {
  - logger : ApocalipsisLogger
  - enPausa : boolean
  - lockPausa : ReentrantLock
  - reanudarCondicion : Condition

  + ControlPausa(log : ApocalipsisLogger)
  + verificarPausa() : void
  + reanudarEjecucion() : void
  + detenerEjecucion() : void
}

ControlPausa -> ApocalipsisLogger

class Humano{
  - id : String[]
  - controlPausa : ControlPausa
  - zonaComun : ZonaComun
  - zonaDescanso : ZonaDescanso
  - comedor : Comedor
  - tunel : Tunel[]
  - enEsperaAtaque : AtomicBoolean
  - sincronizadorAtaque : CyclicBarrier
  - estaMarcado : boolean
  - muerto : boolean

  + Humano(id : String[], comedor : Comedor, tunel : Tunel[], zonaComun : ZonaComun, zonaDescanso : ZonaDescanso, controlPausa : ControlPausa)
  + getIdHumano() : String[]
  + getIdHumanoNom() : String
  + setIdHumano(id : String[]) : void
  + getTunel() : Tunel[]
  + estaEsperandoAtaque() : boolean
  + setEsperandoAtaque(estado : boolean) : void
  + ejecutarDefensa() : void
  + estaMarcado() : boolean
  + marcar(marcado : boolean) : void
  + isMuerto() : boolean
  + morir() : void
  + verificarPausa() : void
  + run() : void
}

Humano -> ControlPausa
Humano -> ZonaComun
Humano -> ZonaDescanso
Humano -> Comedor
Humano -> Tunel

class Tunel {
  - id : int
  - logger : ApocalipsisLogger
  - interfaz : InterfazServidor
  - zonaRiesgo : ZonaRiesgo
  - barreraEsperar : CyclicBarrier
  - lockPaso : ReentrantLock
  - condicionPaso : Condition
  - semEspera : Semaphore
  - semPaso : Semaphore
  - colaEspera : LinkedBlockingQueue<Humano>
  - colaAtravesando : LinkedBlockingQueue<Humano>
  - colaRegreso : LinkedBlockingQueue<Humano>

  + Tunel(id : int, zonaRiesgo : ZonaRiesgo, logger : ApocalipsisLogger, interfaz : InterfazServidor)
  + getId() : int
  + getColaEspera() : LinkedBlockingQueue<Humano>
  + getColaAtravesando() : LinkedBlockingQueue<Humano>
  + getColaRegreso() : LinkedBlockingQueue<Humano>
  + salirAlExterior(h : Humano) : void
  + regresarDelExterior(h : Humano) : void
}

Tunel -> ApocalipsisLogger
Tunel -> InterfazServidor
Tunel -> ZonaRiesgo
Tunel -> Humano

class Zombie{
  - id : String[]
  - logger : ApocalipsisLogger
  - controlPausa : ControlPausa
  - zonas : ZonaRiesgo[]
  - victimas : int

  + Zombie(id : String[], zonas : ZonaRiesgo[], controlPausa : ControlPausa, logger : ApocalipsisLogger)
  + getIdZombie() : String
  + obtenerVictimas() : int
  + eliminarHumano(objetivo : Humano, zona : ZonaRiesgo) : void
  + atacar(victima : Humano, zona : ZonaRiesgo) : void
  + run() : void
}

Zombie -> ApocalipsisLogger
Zombie -> ControlPausa
Zombie -> ZonaRiesgo

class ZonaComun {
  - logger : ApocalipsisLogger
  - interfaz : InterfazServidor
  - tuneles : Tunel[]
  - listaHumanos : LinkedBlockingQueue<Humano>

  + ZonaComun(tunelesDisponibles : Tunel[], logger : ApocalipsisLogger, interfaz : InterfazServidor)
  + getListaHumanosZonaComun() : LinkedBlockingQueue<Humano>
  + prepararse(h : Humano) : void
  + entrarZonaComun(h : Humano) : void
  + explorarExterior(h : Humano) : void
}

ZonaComun -> ApocalipsisLogger
ZonaComun -> InterfazServidor
ZonaComun -> Tunel
ZonaComun -> Humano

class ZonaDescanso {
  - logger : ApocalipsisLogger
  - interfaz : InterfazServidor
  - listaDescanso : LinkedBlockingQueue<Humano>

  + ZonaDescanso(logger : ApocalipsisLogger, interfaz : InterfazServidor)
  + getListaHumanosDescansando() : LinkedBlockingQueue<Humano>
  + descansarHumano(h : Humano) : void
  + descansar(h : Humano) : void
}

ZonaDescanso -> ApocalipsisLogger
ZonaDescanso -> InterfazServidor
ZonaDescanso -> Humano

class ZonaRiesgo {
  - id : int
  - logger : ApocalipsisLogger
  - interfaz : InterfazServidor
  - listaZombies : LinkedBlockingQueue<Zombie>
  - listaHumanos : ArrayList<Humano>

  + ZonaRiesgo(idZona : int, logger : ApocalipsisLogger, ventanaUI : InterfazServidor)
  + getId() : int
  + getListaZombies() : LinkedBlockingQueue<Zombie>
  + getListaHumanos() : ArrayList<Humano>
  + entrarZombie(z : Zombie) : void
  + entrarHumano(h : Humano) : void
  + salirZombie(z : Zombie) : void
  + salirHumano(h : Humano) : void
  + seleccionarHumanoAleatorio(zona : ZonaRiesgo) : Humano
}

ZonaRiesgo -> ApocalipsisLogger
ZonaRiesgo -> InterfazServidor
ZonaRiesgo -> Zombie
ZonaRiesgo -> Humano

class ClienteController {
  - interfazCliente : InterfazCliente
  - zonaComun : Integer
  - zonaDescanso : Integer
  - comedor : Integer
  - enColaTunel1, enColaTunel2, enColaTunel3, enColaTunel4 : Integer
  - cruzandoTunel1, cruzandoTunel2, cruzandoTunel3, cruzandoTunel4 : Integer
  - regresandoTunel1, regresandoTunel2, regresandoTunel3, regresandoTunel4 : Integer
  - zombieZonaRiesgo1, zombieZonaRiesgo2, zombieZonaRiesgo3, zombieZonaRiesgo4 : Integer
  - zonaRiesgo1, zonaRiesgo2, zonaRiesgo3, zonaRiesgo4 : Integer
  - topZombies : ArrayList<String>
  - detener : Boolean
  - hayCambio : Boolean

  + ClienteController()
  + getZonaComun() : Integer
  + getZonaDescanso() : Integer
  + getComedor() : Integer
  + getEnColaTunel1() : Integer
  + getEnColaTunel2() : Integer
  + getEnColaTunel3() : Integer
  + getEnColaTunel4() : Integer
  + getCruzandoTunel1() : Integer
  + getCruzandoTunel2() : Integer
  + getCruzandoTunel3() : Integer
  + getCruzandoTunel4() : Integer
  + getRegresandoTunel1() : Integer
  + getRegresandoTunel2() : Integer
  + getRegresandoTunel3() : Integer
  + getRegresandoTunel4() : Integer
  + getZombieZonaRiesgo1() : Integer
  + getZombieZonaRiesgo2() : Integer
  + getZombieZonaRiesgo3() : Integer
  + getZombieZonaRiesgo4() : Integer
  + getZonaRiesgo1() : Integer
  + getZonaRiesgo2() : Integer
  + getZonaRiesgo3() : Integer
  + getZonaRiesgo4() : Integer
  + getTopZombies() : ArrayList<String>
  + isDetener() : Boolean
  + alternarEstadoDetener() : void
  + isCambio() : Boolean
  + activarCambio() : void
  + desactivarCambio() : void
  + iniciarConexion() : void
  + main(args : String[]) : void
}

ClienteController -> InterfazCliente

class ServidorController {
  - apocalipsis : Apocalipsis
  - hayCambioEstado : Boolean
  - socketServidor : ServerSocket
  - estaDetenido : Boolean

  + ServidorController()
  + getApocalipsis() : Apocalipsis
  + manejarConexionCliente(clienteSocket : Socket) : void
  + iniciarServidor() : void
  + main(args : String[]) : void
}

ServidorController -> Apocalipsis

class InterfazCliente{

  - clienteController : ClienteController
  - jLabel1 : JLabel
  - jLabel2 : JLabel
  - jLabel3 : JLabel
  - jLabel4 : JLabel
  - jLabel5 : JLabel
  - jLabel6 : JLabel
  - jLabel7 : JLabel
  - jLabel8 : JLabel
  - jLabel9 : JLabel
  - jLabel10 : JLabel
  - jLabel11 : JLabel
  - jLabel12 : JLabel
  - jLabel13 : JLabel
  - jTextFieldHumanosRefugio : JTextField
  - jTextFieldHumanosZComun : JTextField
  - jTextFieldHumanosZDescanso : JTextField
  - jTextFieldHumanosComedor : JTextField
  - jTextFieldZombisZR1 : JTextField
  - jTextFieldZombisZR2 : JTextField
  - jTextFieldZombisZR3 : JTextField
  - jTextFieldZombisZR4 : JTextField
  - jTextFieldHumanosZR1 : JTextField
  - jTextFieldHumanosZR2 : JTextField
  - jTextFieldHumanosZR3 : JTextField
  - jTextFieldHumanosZR4 : JTextField
  - jTextFieldTunel1 : JTextField
  - jTextFieldTunel2 : JTextField
  - jTextFieldTunel3 : JTextField
  - jTextFieldTunel4 : JTextField
  - jToggleButtonParar : JToggleButton
  - jList1 : JList<String>
  - jScrollPane1 : JScrollPane


  + InterfazCliente(clienteController : ClienteController)
  - jTextFieldHumanosRefugioActionPerformed(evt : ActionEvent) : void
  - jTextFieldHumanosZComunActionPerformed(evt : ActionEvent) : void
  - jTextFieldHumanosZDescansoActionPerformed(evt : ActionEvent) : void
  - jTextFieldHumanosComedorActionPerformed(evt : ActionEvent) : void
  - jTextFieldZombisZR1ActionPerformed(evt : ActionEvent) : void
  - jTextFieldZombisZR2ActionPerformed(evt : ActionEvent) : void
  - jTextFieldZombisZR3ActionPerformed(evt : ActionEvent) : void
  - jTextFieldZombisZR4ActionPerformed(evt : ActionEvent) : void
  - jTextFieldHumanosZR1ActionPerformed(evt : ActionEvent) : void
  - jTextFieldHumanosZR2ActionPerformed(evt : ActionEvent) : void
  - jTextFieldHumanosZR3ActionPerformed(evt : ActionEvent) : void
  - jTextFieldHumanosZR4ActionPerformed(evt : ActionEvent) : void
  - jTextFieldTunel1ActionPerformed(evt : ActionEvent) : void
  - jTextFieldTunel2ActionPerformed(evt : ActionEvent) : void
  - jTextFieldTunel3ActionPerformed(evt : ActionEvent) : void
  - jTextFieldTunel4ActionPerformed(evt : ActionEvent) : void
  - jToggleButtonPararActionPerformed(evt : ActionEvent) : void
  + cargarDatos() : void
  + limpiarCampos() : void
  + refrescarInterfaz() : void
}

InterfazCliente -> ClienteController

class InterfazServidor{
  - apocalipsis : Apocalipsis
  - jLabel1 : JLabel
  - jLabel2 : JLabel
  - jLabel3 : JLabel
  - jLabel4 : JLabel
  - jLabel5 : JLabel
  - jLabel6 : JLabel
  - jLabel7 : JLabel
  - jLabel8 : JLabel
  - jLabel9 : JLabel
  - jLabel10 : JLabel
  - jLabel11 : JLabel
  - jLabel12 : JLabel
  - jLabel13 : JLabel
  - jLabel14 : JLabel
  - jLabel15 : JLabel
  - jPanel1 : JPanel
  - jPanel2 : JPanel
  - jPanelRefugio : JPanel
  - jPanelDescanso : JPanel
  - jPanelTuneles : JPanel
  - jPanelTunel0 : JPanel
  - jPanelTunel1 : JPanel
  - jPanelTunel2 : JPanel
  - jPanelTunel3 : JPanel
  - jPanelTunel4 : JPanel
  - jPanelTunel5 : JPanel
  - jPanelTunel6 : JPanel
  - jPanelTunel7 : JPanel
  - jPaneZonaRiesgo : JPanel
  - jScrollPane1 : JScrollPane
  - jScrollPane2 : JScrollPane
  - jScrollPane3 : JScrollPane
  - jScrollPane5 : JScrollPane
  - jScrollPane6 : JScrollPane
  - jScrollPane8 : JScrollPane
  - jScrollPane9 : JScrollPane
  - jScrollPane10 : JScrollPane
  - jScrollPane11 : JScrollPane
  - jScrollPane21 : JScrollPane
  - jScrollPane22 : JScrollPane
  - jScrollPane23 : JScrollPane
  - jScrollPane24 : JScrollPane
  - jScrollPane25 : JScrollPane
  - jScrollPane26 : JScrollPane
  - jScrollPaneListaRegresando0 : JScrollPane
  - jScrollPaneListaRegresando1 : JScrollPane
  - jScrollPaneListaRegresando2 : JScrollPane
  - jScrollPaneListaRegresando3 : JScrollPane
  - jScrollPaneListaRegresando4 : JScrollPane
  - jScrollPaneListaRegresando6 : JScrollPane
  - jScrollPaneListaRegresando7 : JScrollPane
  - jScrollPaneListaRegresando8 : JScrollPane
  - jTextAreaHumanosZonaComun : JTextArea
  - jTextAreaHumanosDescanso : JTextArea
  - jTextAreaHumanosComedor : JTextArea
  - jTextFieldNumComida : JTextField
  - jListZombis0 : JList<String>
  - jListZombis1 : JList<String>
  - jListZombis2 : JList<String>
  - jListZombis3 : JList<String>
  - jListPasar0 : JList<String>
  - jListPasar1 : JList<String>
  - jListPasar2 : JList<String>
  - jListPasar3 : JList<String>
  - jListPasando0 : JList<String>
  - jListPasando1 : JList<String>
  - jListPasando2 : JList<String>
  - jListPasando3 : JList<String>
  - jListHumanosZona0 : JList<String>
  - jListHumanosZona1 : JList<String>
  - jListHumanosZona2 : JList<String>
  - jListHumanosZona3 : JList<String>
  - jListRegresando0 : JList<String>
  - jListRegresando1 : JList<String>
  - jListRegresando2 : JList<String>
  - jListRegresando3 : JList<String>


  + InterfazServidor(apocalipsis : Apocalipsis)
  - jTextFieldNumComidaActionPerformed(evt : ActionEvent) : void
  + mostrarHumanosZonaComun() : void
  + mostrandoHumanosDescansando() : void
  + mostrarHumanosComedor() : void
  + actualizarCantidadComida() : void
  + refrescarListaEntradaTunel(indice : int) : void
  + refrescarListaTransitando(indice : int) : void
  + actualizarRetornoTunel(indice : int) : void
  + mostrarZombisZonaPeligro(indice : int) : void
  + mostrarHumanosZonaPeligro(indice : int) : void
}

InterfazServidor -> Apocalipsis

@enduml